# docker-compose.yml
version: "3"
services:
  app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    entrypoint: ./docker/wait-for-it.sh db:5432 -t 15 -s --
    environment:
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      AWS_S3_REGION_NAME:
      AWS_STORAGE_BUCKET_NAME:
      DEBUG: 1
      DEBUGPY:
      EMAIL_BACKEND: django.core.mail.backends.console.EmailBackend
      EMAIL_REPLY_TO:
      MAPBOX_UPLOAD_NAME_MAIN:
      MAPBOX_UPLOAD_NAME_SIDE:
      MAPBOX_UPLOAD_NAME_SECTIONS:
      MAPBOX_UPLOAD_NAME_PROJECTS:
      MAPBOX_UPLOAD_TILESET_MAIN:
      MAPBOX_UPLOAD_TILESET_SIDE:
      MAPBOX_UPLOAD_TILESET_SECTIONS:
      MAPBOX_UPLOAD_TILESET_PROJECTS:
      PGDATABASE: docker
      PGHOST: db
      PGPASSWORD: docker
      PGUSER: docker
      REPORTS_NOTIFICATION_CAMPAIGN:
      REPORTS_NOTIFICATION_SENDER:
      TOGGLE_NEWSLETTER:
      TOGGLE_GASTRO_REGISTRATIONS:
      TOGGLE_GASTRO_DIRECT_SIGNUP:
      FRONTEND_URL:
      GASTRO_SIGNUPS_OPEN:
      GASTRO_SIGNUPS_CLOSE:
      TEMPLATE_SET:
      EVENT_RECIPIENT:
      EVENT_SIGNUPS_OPEN:
      EVENT_SIGNUPS_CLOSE:
      EVENT_REPLY_TO:
      PLAYSTREET_RECIPIENT:
      FAHRRADPARKEN_REPLY_TO:
    command:
      - docker-entrypoint.sh
      - --bind
      - 0.0.0.0
      - --reload
      - fixmydjango.wsgi
    volumes:
      - .:/code
      - locale-volume:/code/locale
    ports:
      - "8000:8000"
      - "3000:3000"
    depends_on:
      - db
  db:
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    restart: always
    environment:
      POSTGRES_DB: docker
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
    volumes:
      - data-volume:/var/lib/postgresql/data
volumes:
  data-volume:
  locale-volume:
