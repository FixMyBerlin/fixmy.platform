gzip on;

server_names_hash_bucket_size 128;

limit_req_zone $binary_remote_addr zone=parkingfacilitieslimit:10m rate=1r/s;

upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response
    server localhost:8000 fail_timeout=0;
}

server {
    # if no Host match, close the connection to prevent host spoofing
    listen 80 default_server;
    return 200;
}

server {
    listen 80 deferred;
    client_max_body_size 4G;
    server_name localhost api.fixmycity.de api-staging.fixmycity.de api.radparken.info api-staging.radparken.info
    keepalive_timeout 5;
    set_real_ip_from 172.16.0.0/12;
    real_ip_header X-Forwarded-For;
    real_ip_recursive off;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    location /api/fahrradparken/parking-facilities {
        limit_req zone=parkingfacilitieslimit burst=10 nodelay;
        limit_req_status 429;
    }
}
