# Generated by Django 3.0.7 on 2020-09-09 17:24


import django.db.models.deletion
import django.contrib.gis.db.models.fields
from django.conf import settings
from django.db import migrations, models
from django.forms import model_to_dict
from django.contrib.contenttypes.models import ContentType


def import_reports(apps, schema_editor):
    """Import reports from fixmyapp.reports"""

    Report = apps.get_model('reports', 'BikeStands')
    ReportLegacy = apps.get_model('fixmyapp', 'BikeStands')

    # This function relies on fixmyapp.reports still existing at the time of
    # running this migration. If the model has already been removed we can quit
    # early because there's nothing to import
    if ReportLegacy is None:
        return

    from fixmyapp.models import Report as ReportDangerousDirect

    # ct is the content type of the GenericRelation objects linking reports to
    # likes and photos
    try:
        ct = ContentType.objects.get(model='report', app_label='reports')
    except ContentType.DoesNotExist:
        return

    for source in ReportLegacy.objects.all():
        data = model_to_dict(source, exclude=['user', 'likes', 'photo', 'report_ptr'])
        target = Report(**data)
        target.number = source.number
        target.fee_acceptable = source.fee_acceptable
        target.user = source.user
        target.save()

        target.created_date = source.created_date
        target.modified_date = source.modified_date
        # override auto_now and auto_now_add
        target.save(update_fields=['created_date', 'modified_date'])

        # As generic relation fields are not accessible in the fake models
        # obtained from apps.get_model, this tries to retrieve a list of likes
        # and photos through the current
        report_direct = ReportDangerousDirect.objects.get(pk=source.report_ptr.id)

        for like in report_direct.likes.all():
            # Set id to None to `Insert` instead of `Update`
            like.id = None
            like.content_object = target
            like.content_type = ct
            like.save()

        for photo in report_direct.photo.all():
            photo.id = None
            photo.content_object = target
            photo.content_type = ct
            photo.save()


def un_import_reports(apps, schema_editor):
    Like = apps.get_model('fixmyapp', 'Like')
    Like.objects.filter(content_type__app_label='reports').delete()

    Photo = apps.get_model('fixmyapp', 'Photo')
    Photo.objects.filter(content_type__app_label='reports').delete()


class Migration(migrations.Migration):

    initial = True

    dependencies = [migrations.swappable_dependency(settings.AUTH_USER_MODEL)]

    operations = [
        migrations.CreateModel(
            name='Report',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'created_date',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='Created date'
                    ),
                ),
                (
                    'modified_date',
                    models.DateTimeField(auto_now=True, verbose_name='Modified date'),
                ),
                (
                    'address',
                    models.TextField(blank=True, null=True, verbose_name='address'),
                ),
                (
                    'geometry',
                    django.contrib.gis.db.models.fields.PointField(
                        srid=4326, verbose_name='geometry'
                    ),
                ),
                (
                    'subject',
                    models.CharField(
                        choices=[('BIKE_STANDS', 'bike stands')],
                        max_length=100,
                        verbose_name='subject',
                    ),
                ),
                (
                    'description',
                    models.CharField(
                        blank=True,
                        max_length=1000,
                        null=True,
                        verbose_name='description',
                    ),
                ),
                (
                    'published',
                    models.BooleanField(default=True, verbose_name='published'),
                ),
                (
                    'status',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('report_new', 'new'),
                            ('report_verification', 'verification'),
                            ('report_accepted', 'accepted'),
                            ('report_rejected', 'rejected'),
                            ('report_inactive', 'inactive'),
                            ('planning', 'planning'),
                            ('tender', 'tender'),
                            ('invalid', 'invalid'),
                            ('execution', 'execution'),
                            ('done', 'done'),
                        ],
                        default='report_new',
                        max_length=20,
                        null=True,
                        verbose_name='status',
                    ),
                ),
                (
                    'status_reason',
                    models.TextField(
                        blank=True, null=True, verbose_name='reason for status'
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={'verbose_name': 'report', 'verbose_name_plural': 'reports'},
        ),
        migrations.CreateModel(
            name='BikeStands',
            fields=[
                (
                    'report_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='reports.Report',
                    ),
                ),
                ('number', models.PositiveSmallIntegerField(verbose_name='number')),
                (
                    'fee_acceptable',
                    models.BooleanField(default=False, verbose_name='fee_acceptable'),
                ),
            ],
            options={
                'verbose_name': 'bike stands',
                'verbose_name_plural': 'bike stands',
            },
            bases=('reports.report',),
        ),
        migrations.RunPython(import_reports, un_import_reports),
    ]
